{"ast":null,"code":"var _jsxFileName = \"/Users/pichael/Projects/Learning/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  // //this is to help store and remember values\n  // constructor(props){\n  //     // you need to always call super when defining the constructor of a subclass\n  //     super(props);\n  //     this.state = {\n  //         value:  null,\n  //     };\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\" // In React, it’s conventional to use on[Event] names for props which represent events and \n      //handle[Event] for the methods which handle the events.\n      ,\n      onClick: () => this.props.onClick(),\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //making a 9 element arr defind as null\n      squares: Array(9).fill(null)\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice(); //controlled compoenete\n\n    squares[i] = 'X';\n    this.setState({\n      squares: squares\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    const status = 'Next player: X';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 5\n}, this), document.getElementById('root')); //   https://reactjs.org/tutorial/tutorial.html lifting state up","map":{"version":3,"sources":["/Users/pichael/Projects/Learning/my-app/src/index.js"],"names":["React","ReactDOM","Square","Component","render","props","onClick","value","Board","constructor","state","squares","Array","fill","handleClick","i","slice","setState","renderSquare","status","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n    // //this is to help store and remember values\n    // constructor(props){\n    //     // you need to always call super when defining the constructor of a subclass\n    //     super(props);\n    //     this.state = {\n    //         value:  null,\n    //     };\n    // }\n    render() {\n      return (\n        <button className=\"square\" \n        // In React, it’s conventional to use on[Event] names for props which represent events and \n        //handle[Event] for the methods which handle the events.\n        onClick={() => this.props.onClick()}>\n          {this.props.value}\n        </button>\n      );\n    }\n  }\n  \n  class Board extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        //making a 9 element arr defind as null\n        squares: Array(9).fill(null),\n      };\n    }\n\n    handleClick(i){\n      const squares = this.state.squares.slice();\n      //controlled compoenete\n      squares[i] = 'X';\n      this.setState({squares: squares});\n    }\n\n    renderSquare(i) {\n      return (\n        <Square \n          value={this.state.squares[i]} \n          onClick={() => this.handleClick(i)} \n        />\n      );\n    }\n  \n    render() {\n      const status = 'Next player: X';\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  \n//   https://reactjs.org/tutorial/tutorial.html lifting state up"]},"metadata":{},"sourceType":"module"}